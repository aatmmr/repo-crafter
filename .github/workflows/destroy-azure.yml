name: Destroy Azure Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      confirm_destroy:
        description: 'Type "DESTROY" to confirm resource deletion'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}
  cancel-in-progress: false

jobs:
  destroy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Validate destruction confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "‚ùå Destruction not confirmed. You must type 'DESTROY' exactly."
            exit 1
          fi
          echo "‚úÖ Destruction confirmed for environment: ${{ github.event.inputs.environment }}"

      - name: Check Environment Exists
        run: |
          echo "üîç Checking if Azure environment exists..."
          
          ENV_VAR_NAME=""
          case "${{ github.event.inputs.environment }}" in
            "prod") ENV_VAR_NAME="AZURE_ENV_PROD_CREATED" ;;
            "staging") ENV_VAR_NAME="AZURE_ENV_STAGING_CREATED" ;;
            "dev") ENV_VAR_NAME="AZURE_ENV_DEV_CREATED" ;;
          esac
          
          # Note: This check is informational - we'll proceed with destruction anyway
          echo "Environment variable to check: ${ENV_VAR_NAME}"
          echo "üö® Proceeding with destruction of environment: ${{ github.event.inputs.environment }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan Destroy
        run: |
          terraform plan -destroy \
            -var="environment=${{ github.event.inputs.environment }}" \
            -var="container_tag=latest" \
            -var="github_app_id=${{ secrets.REPOCRAFTER_APP_ID }}" \
            -var="github_private_key=${{ secrets.REPOCRAFTER_PRIVATE_KEY }}" \
            -var="github_webhook_secret=${{ secrets.REPOCRAFTER_WEBHOOK_SECRET }}" \
            -var="github_client_id=${{ secrets.REPOCRAFTER_CLIENT_ID }}" \
            -var="github_client_secret=${{ secrets.REPOCRAFTER_CLIENT_SECRET }}" \
            -var="repo_crafter_api_key=${{ secrets.REPO_CRAFTER_API_KEY }}" \
            -out=destroy-plan
        working-directory: ./terraform

      - name: Terraform Destroy
        run: |
          echo "üö® DESTROYING Azure resources for environment: ${{ github.event.inputs.environment }}"
          terraform apply -auto-approve destroy-plan
          echo "‚úÖ Resources destroyed successfully"
        working-directory: ./terraform

      - name: Destroy Azure Infrastructure
        run: |
          echo "üö® DESTROYING base Azure infrastructure for environment: ${{ github.event.inputs.environment }}"
          
          # Delete App Service Plan
          az appservice plan delete \
            --name "asp-repo-crafter-${{ github.event.inputs.environment }}" \
            --resource-group "rg-repo-crafter-${{ github.event.inputs.environment }}" \
            --yes || echo "App Service Plan may not exist or already deleted"
          
          # Delete Resource Group (this will delete everything inside)
          az group delete \
            --name "rg-repo-crafter-${{ github.event.inputs.environment }}" \
            --yes || echo "Resource Group may not exist or already deleted"
          
          echo "‚úÖ Base Azure infrastructure destroyed successfully"

      - name: Clean Up Repository Variables
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENV_UPPER: ${{ github.event.inputs.environment == 'prod' && 'PROD' || github.event.inputs.environment == 'staging' && 'STAGING' || 'DEV' }}
        run: |
          echo "üßπ Cleaning up repository variables..."
          
          # Remove environment variables
          gh variable delete "AZURE_ENV_${ENV_UPPER}_CREATED" || echo "Variable may not exist"
          gh variable delete "AZURE_RG_${ENV_UPPER}" || echo "Variable may not exist"
          gh variable delete "AZURE_ASP_${ENV_UPPER}" || echo "Variable may not exist"
          
          echo "‚úÖ Repository variables cleaned up"

      - name: Post-destruction cleanup
        run: |
          echo "üßπ Cleaning up Terraform state and plan files"
          rm -f terraform.tfstate*
          rm -f destroy-plan
          echo "‚úÖ Local cleanup completed"
          echo ""
          echo "üéâ Environment '${{ github.event.inputs.environment }}' has been completely destroyed!"
          echo "   You can recreate it using the 'Create Azure Environment' workflow."
        working-directory: ./terraform
